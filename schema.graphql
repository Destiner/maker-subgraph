type Maker @entity {
	id: ID!
	index: BigInt!
	rate: BigInt!
	collaterals: [Collateral!]!
	vaultCount: Int!
	debt: BigInt!
	supply: BigInt!
	chaiSupply: BigInt!
	activeSpell: Spell!
}

type Collateral @entity {
	id: ID!
	index: BigInt!
	rate: BigInt!
	supply: BigInt!
	debt: BigInt!
	ceiling: BigInt!
	minRatio: BigInt!
}

type User @entity {
	id: ID!
	owner: User
	proxy: User
	balance: BigInt!
	chaiBalance: BigInt!
	cdps: [CDP!] @derivedFrom(field: "owner")
}

type CDP @entity {
	id: ID!
	owner: User!
	vault: Vault!
}

type Vault @entity {
	id: ID!
	cdp: CDP!
	collateral: Collateral!
	debt: BigInt!
	supply: BigInt!
}

type Flip @entity {
	id: ID!
	collateral: Collateral!
}

type Spell @entity {
	id: ID!
	description: String
	changes: [Change!] @derivedFrom(field: "spell")
	timelocked: Int
	executed: Int
}

type SpellAction @entity {
	id: ID!
	spell: Spell!
}

type Change @entity {
	id: ID! 
	spell: Spell!
	parameter: String!
	value: BigInt!
}
